---

- name: Persistent hostname allowed in cloud config file
  lineinfile: "dest=/etc/cloud/cloud.cfg line='preserve_hostname: true'"

- name: Get instance ID
  uri:
    url: http://instance-data/latest/meta-data/instance-id
    return_content: yes
    register: instance_id
    check_mode: no

- name: Get instance region
  shell: >
    AZ=`curl --silent http://instance-data/latest/meta-data/placement/availability-zone`;echo "${AZ::-1}"
  register: region
  check_mode: no
  changed_when: false

- name: Get instance Name tag
  shell: >
    set -o pipefail 
    && aws ec2 describe-tags 
    --filters "Name=resource-id,Values={{ instance_id.content }}" 
              "Name=key,Values=Name" --region "{{ region.stdout }}"  
    | jq --raw-output '.Tags|.[0]|.["Value"]'
  register: server_tag_name
  check_mode: no
  changed_when: false

- name: Set hostname to instance name
  command: hostnamectl set-hostname "{{ server_tag_name.stdout }}"
  when:

- name: Set /etc/hosts from eth0 for legacy if possible
  lineinfile:
    dest: /etc/hosts
    line: "{{ ansible_eth0.ipv4.address }} {{ server_tag_name.stdout }}"
  when: >
    ansible_eth0 is defined and ansible_eth0 is not none

# This has come up on newer AWS CentOS7 images.
- name: Otherwise /etc/hosts from ens5 for legacy if possible
  lineinfile:
    dest: /etc/hosts
    line: "{{ ansible_ens5.ipv4.address }} {{ server_tag_name.stdout }}"
  when: >
    (ansible_eth0 is not defined or ansible_eth0 is none) and (ansible_ens5 is defined and ansible_ens5 is not none)
